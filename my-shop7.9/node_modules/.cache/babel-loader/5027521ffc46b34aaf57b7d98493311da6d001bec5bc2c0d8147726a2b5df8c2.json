{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport { createRouter, createWebHistory } from 'vue-router';\nimport AdminDashboard from './pages/AdminDashboard.vue';\nimport ManageProducts from './pages/ManageProducts.vue';\nimport ManageReviews from './pages/ManageReviews.vue';\nimport LoginPage from './components/LoginPage.vue';\nimport HomePage from './components/HomePage.vue';\n\n// Створюємо маршрути\nconst routes = [{\n  path: '/',\n  component: AdminDashboard,\n  // Використовуємо AdminDashboard як базову сторінку\n  children: [{\n    path: '',\n    component: HomePage\n  },\n  // Головна сторінка\n  {\n    path: 'reviews',\n    component: ManageReviews\n  }]\n}, {\n  path: '/admin',\n  component: AdminDashboard,\n  children: [{\n    path: 'products',\n    component: ManageProducts\n  }, {\n    path: 'reviews',\n    component: ManageReviews\n  }],\n  meta: {\n    requiresAuth: true\n  } // Додаємо вимогу авторизації\n}, {\n  path: '/login',\n  component: LoginPage\n} // Сторінка авторизації\n];\n\n// Створюємо роутер\nconst router = createRouter({\n  history: createWebHistory('/my-shop7.9/'),\n  routes\n});\n\n// Додаємо перевірку авторизації перед кожним переходом\nrouter.beforeEach((to, from, next) => {\n  const isAuthenticated = !!localStorage.getItem('authUser'); // Перевіряємо, чи є користувач авторизованим\n  if (to.matched.some(record => record.meta.requiresAuth) && !isAuthenticated) {\n    next('/login'); // Якщо маршрут вимагає авторизації, перенаправляємо на сторінку входу\n  } else {\n    next(); // Інакше дозволяємо перехід\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","AdminDashboard","ManageProducts","ManageReviews","LoginPage","HomePage","routes","path","component","children","meta","requiresAuth","router","history","beforeEach","to","from","next","isAuthenticated","localStorage","getItem","matched","some","record"],"sources":["C:/Users/Liliya/OneDrive/Документи/GitHub/my-shop7.9/my-shop7.9/src/router.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\r\nimport AdminDashboard from './pages/AdminDashboard.vue';\r\nimport ManageProducts from './pages/ManageProducts.vue';\r\nimport ManageReviews from './pages/ManageReviews.vue';\r\nimport LoginPage from './components/LoginPage.vue';\r\nimport HomePage from './components/HomePage.vue';\r\n\r\n// Створюємо маршрути\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    component: AdminDashboard, // Використовуємо AdminDashboard як базову сторінку\r\n    children: [\r\n      { path: '', component: HomePage }, // Головна сторінка\r\n      { path: 'reviews', component: ManageReviews },\r\n    ],\r\n  },\r\n  {\r\n    path: '/admin',\r\n    component: AdminDashboard,\r\n    children: [\r\n      { path: 'products', component: ManageProducts },\r\n      { path: 'reviews', component: ManageReviews },\r\n    ],\r\n    meta: { requiresAuth: true }, // Додаємо вимогу авторизації\r\n  },\r\n  { path: '/login', component: LoginPage }, // Сторінка авторизації\r\n];\r\n\r\n// Створюємо роутер\r\nconst router = createRouter({\r\n  history: createWebHistory('/my-shop7.9/'),\r\n  routes,\r\n});\r\n\r\n// Додаємо перевірку авторизації перед кожним переходом\r\nrouter.beforeEach((to, from, next) => {\r\n  const isAuthenticated = !!localStorage.getItem('authUser'); // Перевіряємо, чи є користувач авторизованим\r\n  if (to.matched.some(record => record.meta.requiresAuth) && !isAuthenticated) {\r\n    next('/login'); // Якщо маршрут вимагає авторизації, перенаправляємо на сторінку входу\r\n  } else {\r\n    next(); // Інакше дозволяємо перехід\r\n  }\r\n});\r\n\r\nexport default router;\r\n\r\n"],"mappings":";;AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,cAAc,MAAM,4BAA4B;AACvD,OAAOC,cAAc,MAAM,4BAA4B;AACvD,OAAOC,aAAa,MAAM,2BAA2B;AACrD,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,QAAQ,MAAM,2BAA2B;;AAEhD;AACA,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,SAAS,EAAEP,cAAc;EAAE;EAC3BQ,QAAQ,EAAE,CACR;IAAEF,IAAI,EAAE,EAAE;IAAEC,SAAS,EAAEH;EAAS,CAAC;EAAE;EACnC;IAAEE,IAAI,EAAE,SAAS;IAAEC,SAAS,EAAEL;EAAc,CAAC;AAEjD,CAAC,EACD;EACEI,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAEP,cAAc;EACzBQ,QAAQ,EAAE,CACR;IAAEF,IAAI,EAAE,UAAU;IAAEC,SAAS,EAAEN;EAAe,CAAC,EAC/C;IAAEK,IAAI,EAAE,SAAS;IAAEC,SAAS,EAAEL;EAAc,CAAC,CAC9C;EACDO,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK,CAAC,CAAE;AAChC,CAAC,EACD;EAAEJ,IAAI,EAAE,QAAQ;EAAEC,SAAS,EAAEJ;AAAU,CAAC,CAAE;AAAA,CAC3C;;AAED;AACA,MAAMQ,MAAM,GAAGb,YAAY,CAAC;EAC1Bc,OAAO,EAAEb,gBAAgB,CAAC,cAAc,CAAC;EACzCM;AACF,CAAC,CAAC;;AAEF;AACAM,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMC,eAAe,GAAG,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;EAC5D,IAAIL,EAAE,CAACM,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACb,IAAI,CAACC,YAAY,CAAC,IAAI,CAACO,eAAe,EAAE;IAC3ED,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;EAClB,CAAC,MAAM;IACLA,IAAI,CAAC,CAAC,CAAC,CAAC;EACV;AACF,CAAC,CAAC;AAEF,eAAeL,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}